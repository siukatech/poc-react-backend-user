server:
  port: 28081

spring:
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        ddl-auto: none
        show-sql: true
        format-sql: true

  datasource:
    url: jdbc:postgresql://${db-hostname}/${db-name}
    username: ${db-username}
    password: ${db-password}
    initialization-mode: always
    initialize: true
    bak-schema: classpath:/schema.sql
    continue-on-error: true

# properties for react-backend-parent
# scope: openid is required to keycloak
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${client-id}
            client-secret: ${client-secret}
            authorization-grant-type: authorization_code
            scope: openid,profile,email
            redirect-uri: ${oauth2-client-redirect-uri}

        provider:
          keycloak:
            authorization-uri: ${oauth2-client-keycloak}/realms/${client-realm}/protocol/openid-connect/auth
            token-uri: ${oauth2-client-keycloak}/realms/${client-realm}/protocol/openid-connect/token
            user-info-uri: ${oauth2-client-keycloak}/realms/${client-realm}/protocol/openid-connect/userinfo
            issuer-uri: ${oauth2-client-keycloak}/realms/${client-realm}
            jwk-set-uri: ${oauth2-client-keycloak}/realms/${client-realm}/protocol/openid-connect/certs
            user-name-attribute: preferred_username

      resource-server:
        jwt:
          issuer-uri: ${oauth2-client-keycloak}/realms/${client-realm}


app:
  host-name: http://localhost:28080
  api:
#    my-user-info: /v1/protected/my/user-info
    my-key-info: /v1/protected/my/key-info


logging:
  level:
#    root: DEBUG
#    org.hibernate.SQL: DEBUG
#    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
#    org.springframework.web: TRACE
    org.springframework.security: TRACE
    org.springframework.http.client: TRACE
    com.siukatech.poc.react.backend.parent: TRACE
    com.siukatech.poc.react.backend.app: DEBUG

